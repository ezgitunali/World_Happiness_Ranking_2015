<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.23.0112.0350                               -->
<workbook original-version='18.1' source-build='2021.4.15 (20214.23.0112.0350)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Book2)' inline='true' name='federated.14wji1409aimch1a8movs18j3nlh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Book2' name='excel-direct.1w0agni194us1g1b4qdo51itvisv'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/ezgitunali/Desktop/Book2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1w0agni194us1g1b4qdo51itvisv' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L159:no:A1:L159:0' header='yes' outcome='2'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Region' ordinal='1' />
            <column datatype='string' name='Happiness Rank' ordinal='2' />
            <column datatype='string' name='Happiness Score' ordinal='3' />
            <column datatype='string' name='Standard Error' ordinal='4' />
            <column datatype='real' name='Economy (GDP per Capita)' ordinal='5' />
            <column datatype='string' name='Family' ordinal='6' />
            <column datatype='string' name='Health (Life Expectancy)' ordinal='7' />
            <column datatype='string' name='Freedom' ordinal='8' />
            <column datatype='string' name='Trust (Government Corruption)' ordinal='9' />
            <column datatype='string' name='Generosity' ordinal='10' />
            <column datatype='real' name='Dystopia Residual' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1w0agni194us1g1b4qdo51itvisv' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L159:no:A1:L159:0' header='yes' outcome='2'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Region' ordinal='1' />
            <column datatype='string' name='Happiness Rank' ordinal='2' />
            <column datatype='string' name='Happiness Score' ordinal='3' />
            <column datatype='string' name='Standard Error' ordinal='4' />
            <column datatype='real' name='Economy (GDP per Capita)' ordinal='5' />
            <column datatype='string' name='Family' ordinal='6' />
            <column datatype='string' name='Health (Life Expectancy)' ordinal='7' />
            <column datatype='string' name='Freedom' ordinal='8' />
            <column datatype='string' name='Trust (Government Corruption)' ordinal='9' />
            <column datatype='string' name='Generosity' ordinal='10' />
            <column datatype='real' name='Dystopia Residual' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness Rank</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Happiness Rank]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Happiness Rank</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness Score</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Happiness Score]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Happiness Score</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Standard Error</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Standard Error]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Standard Error</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Economy (GDP per Capita)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Economy (GDP per Capita)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Economy (GDP per Capita)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Family</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Family]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Family</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health (Life Expectancy)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Health (Life Expectancy)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Health (Life Expectancy)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Freedom</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Freedom]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Freedom</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trust (Government Corruption)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Trust (Government Corruption)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Trust (Government Corruption)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Generosity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Generosity]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Generosity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dystopia Residual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dystopia Residual]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Dystopia Residual</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L159:no:A1:L159:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
          <semantic-value key='&quot;Somaliland region&quot;' value='&quot;Somalia&quot;' />
        </semantic-values>
      </column>
      <column caption='Dystopia Residual_' datatype='real' name='[Dystopia Residual (copy)_609182264187932677]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Dystopia Residual]' />
      </column>
      <column caption='Economy (GDP per Capita) (copy)' datatype='real' name='[Economy (GDP per Capita) (copy)_609182264173957120]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Economy (GDP per Capita)]' />
      </column>
      <column datatype='real' name='[Economy (GDP per Capita)]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Freedom_' datatype='real' datatype-customized='true' name='[Freedom (copy)_609182264185524226]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='FLOAT([Freedom])' />
      </column>
      <column aggregation='CountD' caption='Happiness Score_' datatype='real' datatype-customized='true' name='[Happiness Score (copy)_609182264184573953]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='FLOAT([Happiness Score])' />
      </column>
      <column aggregation='CountD' datatype='string' name='[Happiness Score]' role='dimension' type='nominal' />
      <column caption='Health (Life Expectancy)_' datatype='real' datatype-customized='true' name='[Health (Life Expectancy) (copy)_609182264186388483]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='FLOAT([Health (Life Expectancy)])' />
      </column>
      <column caption='Trust (Government Corruption)_' datatype='real' datatype-customized='true' name='[Trust (Government Corruption) (copy)_609182264186585092]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='FLOAT([Trust (Government Corruption)])' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_D22F2D7AFE04415D8E020F3447914DBD]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Economy (GDP per Capita) (copy)_609182264173957120]' derivation='None' name='[none:Economy (GDP per Capita) (copy)_609182264173957120:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Economy (GDP per Capita)]' derivation='None' name='[none:Economy (GDP per Capita):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Happiness Score (copy)_609182264184573953]' derivation='None' name='[none:Happiness Score (copy)_609182264184573953:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Trust (Government Corruption) (copy)_609182264186585092]' derivation='None' name='[none:Trust (Government Corruption) (copy)_609182264186585092:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Country,Economy (GDP per Capita),Happiness Score (copy))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country:nk]' />
          <groupfilter function='level-members' level='[none:Economy (GDP per Capita):qk]' />
          <groupfilter function='level-members' level='[none:Happiness Score (copy)_609182264184573953:qk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Country,Happiness Score (copy),Trust (Government Corruption) (copy))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country:nk]' />
          <groupfilter function='level-members' level='[none:Happiness Score (copy)_609182264184573953:qk]' />
          <groupfilter function='level-members' level='[none:Trust (Government Corruption) (copy)_609182264186585092:qk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Economy (GDP per Capita) (copy)_609182264173957120:ok]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>1.69042</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>271.0</bucket>
            </map>
            <map to='#2c5a86'>
              <bucket>1.5639099999999999</bucket>
            </map>
            <map to='#2c5b87'>
              <bucket>1.5542199999999999</bucket>
            </map>
            <map to='#2c5c87'>
              <bucket>1.52186</bucket>
            </map>
            <map to='#2d5d88'>
              <bucket>1.4590000000000001</bucket>
            </map>
            <map to='#2d5e89'>
              <bucket>1.42727</bucket>
            </map>
            <map to='#2d5f89'>
              <bucket>1.3965099999999999</bucket>
            </map>
            <map to='#2d5f8a'>
              <bucket>1.39541</bucket>
            </map>
            <map to='#2d608b'>
              <bucket>1.3945099999999999</bucket>
            </map>
            <map to='#2e618c'>
              <bucket>1.3860399999999999</bucket>
            </map>
            <map to='#2e628c'>
              <bucket>1.3601099999999999</bucket>
            </map>
            <map to='#2e638d'>
              <bucket>1.3372299999999999</bucket>
            </map>
            <map to='#2e648e'>
              <bucket>1.33596</bucket>
            </map>
            <map to='#2e658e'>
              <bucket>1.33358</bucket>
            </map>
            <map to='#2f658f'>
              <bucket>1.3317099999999999</bucket>
            </map>
            <map to='#2f6690'>
              <bucket>1.32944</bucket>
            </map>
            <map to='#2f6791'>
              <bucket>1.32792</bucket>
            </map>
            <map to='#2f6891'>
              <bucket>1.32629</bucket>
            </map>
            <map to='#2f6992'>
              <bucket>1.32548</bucket>
            </map>
            <map to='#306a93'>
              <bucket>1.32376</bucket>
            </map>
            <map to='#306b93'>
              <bucket>1.30782</bucket>
            </map>
            <map to='#306c94'>
              <bucket>1.3023199999999999</bucket>
            </map>
            <map to='#306d95'>
              <bucket>1.29098</bucket>
            </map>
            <map to='#306e95'>
              <bucket>1.2902499999999999</bucket>
            </map>
            <map to='#316f96'>
              <bucket>1.2777799999999999</bucket>
            </map>
            <map to='#317097'>
              <bucket>1.27074</bucket>
            </map>
            <map to='#317197'>
              <bucket>1.26637</bucket>
            </map>
            <map to='#317298'>
              <bucket>1.2511399999999999</bucket>
            </map>
            <map to='#317399'>
              <bucket>1.2501800000000001</bucket>
            </map>
            <map to='#327499'>
              <bucket>1.24461</bucket>
            </map>
            <map to='#32759a'>
              <bucket>1.23011</bucket>
            </map>
            <map to='#32759b'>
              <bucket>1.2285699999999999</bucket>
            </map>
            <map to='#32769b'>
              <bucket>1.21183</bucket>
            </map>
            <map to='#32779c'>
              <bucket>1.2081299999999999</bucket>
            </map>
            <map to='#33789d'>
              <bucket>1.2080599999999999</bucket>
            </map>
            <map to='#33799d'>
              <bucket>1.2074</bucket>
            </map>
            <map to='#337a9e'>
              <bucket>1.1849799999999999</bucket>
            </map>
            <map to='#337b9f'>
              <bucket>1.1789799999999999</bucket>
            </map>
            <map to='#337c9f'>
              <bucket>1.1689099999999999</bucket>
            </map>
            <map to='#347da0'>
              <bucket>1.15991</bucket>
            </map>
            <map to='#347ea1'>
              <bucket>1.1540600000000001</bucket>
            </map>
            <map to='#347fa1'>
              <bucket>1.15174</bucket>
            </map>
            <map to='#3480a2'>
              <bucket>1.14723</bucket>
            </map>
            <map to='#3481a3'>
              <bucket>1.13764</bucket>
            </map>
            <map to='#3482a4'>
              <bucket>1.1314500000000001</bucket>
            </map>
            <map to='#3483a4'>
              <bucket>1.1255500000000001</bucket>
            </map>
            <map to='#3484a5'>
              <bucket>1.12486</bucket>
            </map>
            <map to='#3485a6'>
              <bucket>1.12094</bucket>
            </map>
            <map to='#3485a6'>
              <bucket>1.1225400000000001</bucket>
            </map>
            <map to='#3586a7'>
              <bucket>1.1131200000000001</bucket>
            </map>
            <map to='#3587a8'>
              <bucket>1.1071500000000001</bucket>
            </map>
            <map to='#3588a9'>
              <bucket>1.0825400000000001</bucket>
            </map>
            <map to='#3589a9'>
              <bucket>1.0635300000000001</bucket>
            </map>
            <map to='#358aaa'>
              <bucket>1.06166</bucket>
            </map>
            <map to='#358bab'>
              <bucket>1.06098</bucket>
            </map>
            <map to='#358cab'>
              <bucket>1.0602400000000001</bucket>
            </map>
            <map to='#358dac'>
              <bucket>1.0535099999999999</bucket>
            </map>
            <map to='#358ead'>
              <bucket>1.0442400000000001</bucket>
            </map>
            <map to='#368fae'>
              <bucket>1.04345</bucket>
            </map>
            <map to='#3690ae'>
              <bucket>1.0319199999999999</bucket>
            </map>
            <map to='#3791af'>
              <bucket>1.0256400000000001</bucket>
            </map>
            <map to='#3892af'>
              <bucket>1.02389</bucket>
            </map>
            <map to='#3992b0'>
              <bucket>1.02054</bucket>
            </map>
            <map to='#3993b0'>
              <bucket>1.0121599999999999</bucket>
            </map>
            <map to='#3a94b1'>
              <bucket>1.0087999999999999</bucket>
            </map>
            <map to='#3b95b1'>
              <bucket>1.0076099999999999</bucket>
            </map>
            <map to='#3c96b2'>
              <bucket>0.99534</bucket>
            </map>
            <map to='#3c97b3'>
              <bucket>0.99355000000000004</bucket>
            </map>
            <map to='#3d98b3'>
              <bucket>0.98548999999999998</bucket>
            </map>
            <map to='#3e99b4'>
              <bucket>0.98124</bucket>
            </map>
            <map to='#3f9ab4'>
              <bucket>0.97438000000000002</bucket>
            </map>
            <map to='#409bb5'>
              <bucket>0.96689999999999998</bucket>
            </map>
            <map to='#409cb5'>
              <bucket>0.95847000000000004</bucket>
            </map>
            <map to='#419db6'>
              <bucket>0.95577999999999996</bucket>
            </map>
            <map to='#429eb7'>
              <bucket>0.93928999999999996</bucket>
            </map>
            <map to='#439fb7'>
              <bucket>0.92052999999999996</bucket>
            </map>
            <map to='#43a0b8'>
              <bucket>0.92049000000000003</bucket>
            </map>
            <map to='#44a1b8'>
              <bucket>0.91861000000000004</bucket>
            </map>
            <map to='#45a2b9'>
              <bucket>0.91851000000000005</bucket>
            </map>
            <map to='#47a3b9'>
              <bucket>0.90198</bucket>
            </map>
            <map to='#49a4ba'>
              <bucket>0.90019000000000005</bucket>
            </map>
            <map to='#4aa5ba'>
              <bucket>0.89537</bucket>
            </map>
            <map to='#4ca5bb'>
              <bucket>0.89012000000000002</bucket>
            </map>
            <map to='#4da6bb'>
              <bucket>0.88180000000000003</bucket>
            </map>
            <map to='#4fa7bb'>
              <bucket>0.88112999999999997</bucket>
            </map>
            <map to='#51a8bc'>
              <bucket>0.87866999999999995</bucket>
            </map>
            <map to='#52a9bc'>
              <bucket>0.86402000000000001</bucket>
            </map>
            <map to='#54aabd'>
              <bucket>0.83523999999999998</bucket>
            </map>
            <map to='#56abbd'>
              <bucket>0.83223000000000003</bucket>
            </map>
            <map to='#57abbe'>
              <bucket>0.82826999999999995</bucket>
            </map>
            <map to='#59acbe'>
              <bucket>0.82818999999999998</bucket>
            </map>
            <map to='#5badbf'>
              <bucket>0.81037999999999999</bucket>
            </map>
            <map to='#5caebf'>
              <bucket>0.80147999999999997</bucket>
            </map>
            <map to='#5eafc0'>
              <bucket>0.79906999999999995</bucket>
            </map>
            <map to='#5fb0c0'>
              <bucket>0.77041999999999999</bucket>
            </map>
            <map to='#61b1c1'>
              <bucket>0.76820999999999995</bucket>
            </map>
            <map to='#63b2c1'>
              <bucket>0.76454</bucket>
            </map>
            <map to='#64b2c1'>
              <bucket>0.75985000000000003</bucket>
            </map>
            <map to='#66b3c2'>
              <bucket>0.75778000000000001</bucket>
            </map>
            <map to='#67b4c2'>
              <bucket>0.74553000000000003</bucket>
            </map>
            <map to='#69b5c3'>
              <bucket>0.7419</bucket>
            </map>
            <map to='#6ab6c3'>
              <bucket>0.73479000000000005</bucket>
            </map>
            <map to='#6bb6c4'>
              <bucket>0.71206000000000003</bucket>
            </map>
            <map to='#6db7c4'>
              <bucket>0.70531999999999995</bucket>
            </map>
            <map to='#6eb8c5'>
              <bucket>0.68132999999999999</bucket>
            </map>
            <map to='#70b9c5'>
              <bucket>0.67866000000000004</bucket>
            </map>
            <map to='#71bac6'>
              <bucket>0.66320000000000001</bucket>
            </map>
            <map to='#73bbc6'>
              <bucket>0.65434999999999999</bucket>
            </map>
            <map to='#74bbc6'>
              <bucket>0.64498999999999995</bucket>
            </map>
            <map to='#75bcc7'>
              <bucket>0.63244</bucket>
            </map>
            <map to='#77bdc7'>
              <bucket>0.63216000000000006</bucket>
            </map>
            <map to='#78bec8'>
              <bucket>0.59867000000000004</bucket>
            </map>
            <map to='#7abfc8'>
              <bucket>0.59543000000000001</bucket>
            </map>
            <map to='#7bbfc9'>
              <bucket>0.59531999999999996</bucket>
            </map>
            <map to='#7dc0c9'>
              <bucket>0.59448000000000001</bucket>
            </map>
            <map to='#7ec1ca'>
              <bucket>0.59325000000000006</bucket>
            </map>
            <map to='#7fc2ca'>
              <bucket>0.59065999999999996</bucket>
            </map>
            <map to='#81c3cb'>
              <bucket>0.54649000000000003</bucket>
            </map>
            <map to='#82c4cb'>
              <bucket>0.54557999999999995</bucket>
            </map>
            <map to='#84c4cb'>
              <bucket>0.52107000000000003</bucket>
            </map>
            <map to='#85c5cb'>
              <bucket>0.47427999999999998</bucket>
            </map>
            <map to='#87c6cc'>
              <bucket>0.47038000000000002</bucket>
            </map>
            <map to='#88c7cc'>
              <bucket>0.46533999999999998</bucket>
            </map>
            <map to='#89c8cc'>
              <bucket>0.46038000000000001</bucket>
            </map>
            <map to='#8bc8cd'>
              <bucket>0.45406999999999997</bucket>
            </map>
            <map to='#8cc9cd'>
              <bucket>0.44024999999999997</bucket>
            </map>
            <map to='#8ecacd'>
              <bucket>0.42249999999999999</bucket>
            </map>
            <map to='#8fcbce'>
              <bucket>0.39752999999999999</bucket>
            </map>
            <map to='#91ccce'>
              <bucket>0.39046999999999998</bucket>
            </map>
            <map to='#92ccce'>
              <bucket>0.37545000000000001</bucket>
            </map>
            <map to='#93cdcf'>
              <bucket>0.36498000000000003</bucket>
            </map>
            <map to='#95cecf'>
              <bucket>0.36470999999999998</bucket>
            </map>
            <map to='#96cfcf'>
              <bucket>0.35997000000000001</bucket>
            </map>
            <map to='#98d0cf'>
              <bucket>0.34193000000000001</bucket>
            </map>
            <map to='#99d1d0'>
              <bucket>0.33023999999999998</bucket>
            </map>
            <map to='#9bd1d0'>
              <bucket>0.31981999999999999</bucket>
            </map>
            <map to='#9cd2d0'>
              <bucket>0.28665000000000002</bucket>
            </map>
            <map to='#9dd3d1'>
              <bucket>0.28520000000000001</bucket>
            </map>
            <map to='#9fd4d1'>
              <bucket>0.27107999999999999</bucket>
            </map>
            <map to='#a1d5d1'>
              <bucket>0.26673000000000002</bucket>
            </map>
            <map to='#a2d6d2'>
              <bucket>0.26074000000000003</bucket>
            </map>
            <map to='#a4d7d2'>
              <bucket>0.25812000000000002</bucket>
            </map>
            <map to='#a5d7d3'>
              <bucket>0.23905999999999999</bucket>
            </map>
            <map to='#a7d8d3'>
              <bucket>0.22208</bucket>
            </map>
            <map to='#a9d9d3'>
              <bucket>0.21102000000000001</bucket>
            </map>
            <map to='#aadad4'>
              <bucket>0.20868</bucket>
            </map>
            <map to='#acdbd4'>
              <bucket>0.20824000000000001</bucket>
            </map>
            <map to='#addcd4'>
              <bucket>0.19073000000000001</bucket>
            </map>
            <map to='#afddd5'>
              <bucket>0.18847</bucket>
            </map>
            <map to='#b0ddd5'>
              <bucket>0.17416999999999999</bucket>
            </map>
            <map to='#b2ded5'>
              <bucket>0.083080000000000001</bucket>
            </map>
            <map to='#b4dfd6'>
              <bucket>0.0785</bucket>
            </map>
            <map to='#b5e0d6'>
              <bucket>0.071199999999999999</bucket>
            </map>
            <map to='#b7e1d6'>
              <bucket>0.069400000000000003</bucket>
            </map>
            <map to='#b8e2d7'>
              <bucket>0.016039999999999999</bucket>
            </map>
            <map to='#bae3d7'>
              <bucket>0.015299999999999999</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>0.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Cyprus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Somaliland region&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_D22F2D7AFE04415D8E020F3447914DBD'>
            <properties context=''>
              <relation connection='excel-direct.1w0agni194us1g1b4qdo51itvisv' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:L159:no:A1:L159:0' header='yes' outcome='2'>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                  <column datatype='string' name='Happiness Rank' ordinal='2' />
                  <column datatype='string' name='Happiness Score' ordinal='3' />
                  <column datatype='string' name='Standard Error' ordinal='4' />
                  <column datatype='real' name='Economy (GDP per Capita)' ordinal='5' />
                  <column datatype='string' name='Family' ordinal='6' />
                  <column datatype='string' name='Health (Life Expectancy)' ordinal='7' />
                  <column datatype='string' name='Freedom' ordinal='8' />
                  <column datatype='string' name='Trust (Government Corruption)' ordinal='9' />
                  <column datatype='string' name='Generosity' ordinal='10' />
                  <column datatype='real' name='Dystopia Residual' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Economy'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Book2)' name='federated.14wji1409aimch1a8movs18j3nlh' />
          </datasources>
          <datasource-dependencies datasource='federated.14wji1409aimch1a8movs18j3nlh'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
                <semantic-value key='&quot;Somaliland region&quot;' value='&quot;Somalia&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Economy (GDP per Capita)]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Happiness Score_' datatype='real' datatype-customized='true' name='[Happiness Score (copy)_609182264184573953]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([Happiness Score])' />
            </column>
            <column aggregation='CountD' datatype='string' name='[Happiness Score]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Economy (GDP per Capita)]' derivation='None' name='[none:Economy (GDP per Capita):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Happiness Score (copy)_609182264184573953]' derivation='None' name='[none:Happiness Score (copy)_609182264184573953:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14wji1409aimch1a8movs18j3nlh].[Exclusions (Country,Economy (GDP per Capita),Happiness Score (copy))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Country:nk]' />
                <groupfilter function='level-members' level='[none:Economy (GDP per Capita):qk]' />
                <groupfilter function='level-members' level='[none:Happiness Score (copy)_609182264184573953:qk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zimbabwe&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Economy (GDP per Capita):qk]' member='271.0' />
                  <groupfilter function='member' level='[none:Happiness Score (copy)_609182264184573953:qk]' member='4.6100000000000003' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.14wji1409aimch1a8movs18j3nlh].[none:Country:nk]' filter-group='4'>
            <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country:nk]' to='&quot;Zambia&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.14wji1409aimch1a8movs18j3nlh].[none:Region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.14wji1409aimch1a8movs18j3nlh].[none:Region:nk]</column>
            <column>[federated.14wji1409aimch1a8movs18j3nlh].[Exclusions (Country,Economy (GDP per Capita),Happiness Score (copy))]</column>
            <column>[federated.14wji1409aimch1a8movs18j3nlh].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.14wji1409aimch1a8movs18j3nlh].[none:Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14wji1409aimch1a8movs18j3nlh].[none:Happiness Score (copy)_609182264184573953:qk]</rows>
        <cols>[federated.14wji1409aimch1a8movs18j3nlh].[none:Economy (GDP per Capita):qk]</cols>
      </table>
      <simple-id uuid='{4421C27C-1DFC-4ED4-9B3D-1C8AC26228FE}' />
    </worksheet>
    <worksheet name='Freedom'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Book2)' name='federated.14wji1409aimch1a8movs18j3nlh' />
          </datasources>
          <datasource-dependencies datasource='federated.14wji1409aimch1a8movs18j3nlh'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
                <semantic-value key='&quot;Somaliland region&quot;' value='&quot;Somalia&quot;' />
              </semantic-values>
            </column>
            <column aggregation='CountD' caption='Freedom_' datatype='real' datatype-customized='true' name='[Freedom (copy)_609182264185524226]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([Freedom])' />
            </column>
            <column datatype='string' name='[Freedom]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='Happiness Score_' datatype='real' datatype-customized='true' name='[Happiness Score (copy)_609182264184573953]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([Happiness Score])' />
            </column>
            <column aggregation='CountD' datatype='string' name='[Happiness Score]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Freedom (copy)_609182264185524226]' derivation='None' name='[none:Freedom (copy)_609182264185524226:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Happiness Score (copy)_609182264184573953]' derivation='None' name='[none:Happiness Score (copy)_609182264184573953:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14wji1409aimch1a8movs18j3nlh].[none:Country:nk]' filter-group='4'>
            <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country:nk]' to='&quot;Zambia&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.14wji1409aimch1a8movs18j3nlh].[none:Region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.14wji1409aimch1a8movs18j3nlh].[none:Region:nk]</column>
            <column>[federated.14wji1409aimch1a8movs18j3nlh].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.14wji1409aimch1a8movs18j3nlh].[none:Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14wji1409aimch1a8movs18j3nlh].[none:Happiness Score (copy)_609182264184573953:qk]</rows>
        <cols>[federated.14wji1409aimch1a8movs18j3nlh].[none:Freedom (copy)_609182264185524226:qk]</cols>
      </table>
      <simple-id uuid='{3421E4FE-24C9-4A51-94BB-E905654D8859}' />
    </worksheet>
    <worksheet name='Health'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Book2)' name='federated.14wji1409aimch1a8movs18j3nlh' />
          </datasources>
          <datasource-dependencies datasource='federated.14wji1409aimch1a8movs18j3nlh'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
                <semantic-value key='&quot;Somaliland region&quot;' value='&quot;Somalia&quot;' />
              </semantic-values>
            </column>
            <column aggregation='CountD' caption='Happiness Score_' datatype='real' datatype-customized='true' name='[Happiness Score (copy)_609182264184573953]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([Happiness Score])' />
            </column>
            <column aggregation='CountD' datatype='string' name='[Happiness Score]' role='dimension' type='nominal' />
            <column caption='Health (Life Expectancy)_' datatype='real' datatype-customized='true' name='[Health (Life Expectancy) (copy)_609182264186388483]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([Health (Life Expectancy)])' />
            </column>
            <column datatype='string' name='[Health (Life Expectancy)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Happiness Score (copy)_609182264184573953]' derivation='None' name='[none:Happiness Score (copy)_609182264184573953:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Health (Life Expectancy) (copy)_609182264186388483]' derivation='None' name='[none:Health (Life Expectancy) (copy)_609182264186388483:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14wji1409aimch1a8movs18j3nlh].[none:Country:nk]' filter-group='4'>
            <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country:nk]' to='&quot;Zambia&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.14wji1409aimch1a8movs18j3nlh].[none:Region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.14wji1409aimch1a8movs18j3nlh].[none:Region:nk]</column>
            <column>[federated.14wji1409aimch1a8movs18j3nlh].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.14wji1409aimch1a8movs18j3nlh].[none:Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14wji1409aimch1a8movs18j3nlh].[none:Happiness Score (copy)_609182264184573953:qk]</rows>
        <cols>[federated.14wji1409aimch1a8movs18j3nlh].[none:Health (Life Expectancy) (copy)_609182264186388483:qk]</cols>
      </table>
      <simple-id uuid='{D1E64E49-C1DF-47C7-B6DD-B029D9C3289A}' />
    </worksheet>
    <worksheet name='Luxemburg/Qatar Excluded'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Sheet Name> - Economy (GDP per Capita)]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Book2)' name='federated.14wji1409aimch1a8movs18j3nlh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.14wji1409aimch1a8movs18j3nlh'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
                <semantic-value key='&quot;Somaliland region&quot;' value='&quot;Somalia&quot;' />
              </semantic-values>
            </column>
            <column caption='Economy (GDP per Capita) (copy)' datatype='real' name='[Economy (GDP per Capita) (copy)_609182264173957120]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[Economy (GDP per Capita)]' />
            </column>
            <column datatype='real' name='[Economy (GDP per Capita)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Happiness Rank]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='Happiness Score_' datatype='real' datatype-customized='true' name='[Happiness Score (copy)_609182264184573953]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([Happiness Score])' />
            </column>
            <column aggregation='CountD' datatype='string' name='[Happiness Score]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Economy (GDP per Capita) (copy)_609182264173957120]' derivation='Attribute' name='[attr:Economy (GDP per Capita) (copy)_609182264173957120:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Happiness Rank]' derivation='None' name='[none:Happiness Rank:nk]' pivot='key' type='nominal' />
            <column-instance column='[Happiness Score (copy)_609182264184573953]' derivation='None' name='[none:Happiness Score (copy)_609182264184573953:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14wji1409aimch1a8movs18j3nlh].[none:Country:nk]' filter-group='4'>
            <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country:nk]' to='&quot;Zambia&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.14wji1409aimch1a8movs18j3nlh].[none:Happiness Rank:nk]'>
            <groupfilter function='level-members' level='[none:Happiness Rank:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.14wji1409aimch1a8movs18j3nlh].[none:Happiness Score (copy)_609182264184573953:qk]' included-values='in-range'>
            <min>2.839</min>
            <max>7.5869999999999997</max>
          </filter>
          <filter class='categorical' column='[federated.14wji1409aimch1a8movs18j3nlh].[none:Region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.14wji1409aimch1a8movs18j3nlh].[none:Country:nk]</column>
            <column>[federated.14wji1409aimch1a8movs18j3nlh].[none:Region:nk]</column>
            <column>[federated.14wji1409aimch1a8movs18j3nlh].[none:Happiness Score (copy)_609182264184573953:qk]</column>
            <column>[federated.14wji1409aimch1a8movs18j3nlh].[none:Happiness Rank:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.14wji1409aimch1a8movs18j3nlh].[Longitude (generated)]' field-type='quantitative' max='24370348.442512628' min='-12998527.447597051' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.14wji1409aimch1a8movs18j3nlh].[Latitude (generated)]' field-type='quantitative' max='17670871.683541682' min='-9647324.8379820995' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.14wji1409aimch1a8movs18j3nlh].[attr:Economy (GDP per Capita) (copy)_609182264173957120:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff0000</color>
                <color>#fb1616</color>
                <color>#f82d2d</color>
                <color>#f44242</color>
                <color>#f15757</color>
                <color>#ed6c6c</color>
                <color>#ea7f7f</color>
                <color>#e69292</color>
                <color>#e3a5a5</color>
                <color>#dfb7b7</color>
                <color>#dcc8c8</color>
                <color>#d9d9d9</color>
                <color>#bdbdd0</color>
                <color>#a4a4c8</color>
                <color>#8c8cc0</color>
                <color>#7575b8</color>
                <color>#6060b0</color>
                <color>#4c4ca8</color>
                <color>#3a3aa0</color>
                <color>#292998</color>
                <color>#1a1a90</color>
                <color>#0c0c88</color>
                <color>#000080</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.14wji1409aimch1a8movs18j3nlh].[attr:Economy (GDP per Capita) (copy)_609182264173957120:qk]' value='Economy (GDP per Capita) '>
              <formatted-text>
                <run>Economy (GDP per Capita) </run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.14wji1409aimch1a8movs18j3nlh].[attr:Economy (GDP per Capita) (copy)_609182264173957120:qk]' />
              <lod column='[federated.14wji1409aimch1a8movs18j3nlh].[none:Country:nk]' />
              <geometry column='[federated.14wji1409aimch1a8movs18j3nlh].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14wji1409aimch1a8movs18j3nlh].[Latitude (generated)]</rows>
        <cols>[federated.14wji1409aimch1a8movs18j3nlh].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6E23FDF8-722E-4990-B952-E22EB3BBF5A4}' />
    </worksheet>
    <worksheet name='Sheet 10'>
      <layout-options>
        <title>
          <formatted-text>
            <run>World Happiness Ranking and Related Metrics by Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Book2)' name='federated.14wji1409aimch1a8movs18j3nlh' />
          </datasources>
          <datasource-dependencies datasource='federated.14wji1409aimch1a8movs18j3nlh'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
                <semantic-value key='&quot;Somaliland region&quot;' value='&quot;Somalia&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Economy (GDP per Capita)]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Freedom_' datatype='real' datatype-customized='true' name='[Freedom (copy)_609182264185524226]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([Freedom])' />
            </column>
            <column datatype='string' name='[Freedom]' role='dimension' type='nominal' />
            <column datatype='string' name='[Happiness Rank]' role='dimension' type='nominal' />
            <column aggregation='CountD' datatype='string' name='[Happiness Score]' role='dimension' type='nominal' />
            <column caption='Health (Life Expectancy)_' datatype='real' datatype-customized='true' name='[Health (Life Expectancy) (copy)_609182264186388483]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([Health (Life Expectancy)])' />
            </column>
            <column datatype='string' name='[Health (Life Expectancy)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Economy (GDP per Capita)]' derivation='None' name='[none:Economy (GDP per Capita):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Freedom (copy)_609182264185524226]' derivation='None' name='[none:Freedom (copy)_609182264185524226:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Happiness Rank]' derivation='None' name='[none:Happiness Rank:nk]' pivot='key' type='nominal' />
            <column-instance column='[Happiness Score]' derivation='None' name='[none:Happiness Score:nk]' pivot='key' type='nominal' />
            <column-instance column='[Health (Life Expectancy) (copy)_609182264186388483]' derivation='None' name='[none:Health (Life Expectancy) (copy)_609182264186388483:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14wji1409aimch1a8movs18j3nlh].[none:Country:nk]' filter-group='4'>
            <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country:nk]' to='&quot;Zambia&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.14wji1409aimch1a8movs18j3nlh].[none:Region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.14wji1409aimch1a8movs18j3nlh].[none:Country:nk]</column>
            <column>[federated.14wji1409aimch1a8movs18j3nlh].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.14wji1409aimch1a8movs18j3nlh].[none:Happiness Score:nk]' value='124' />
            <format attr='width' field='[federated.14wji1409aimch1a8movs18j3nlh].[none:Economy (GDP per Capita):ok]' value='172' />
            <format attr='width' field='[federated.14wji1409aimch1a8movs18j3nlh].[none:Freedom (copy)_609182264185524226:ok]' value='104' />
            <format attr='width' field='[federated.14wji1409aimch1a8movs18j3nlh].[none:Health (Life Expectancy) (copy)_609182264186388483:ok]' value='224' />
            <format attr='width' field='[federated.14wji1409aimch1a8movs18j3nlh].[none:Region:nk]' value='244' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.14wji1409aimch1a8movs18j3nlh].[none:Economy (GDP per Capita):ok]' value='n#,##0.000;-#,##0.000' />
            <format attr='text-format' field='[federated.14wji1409aimch1a8movs18j3nlh].[none:Freedom (copy)_609182264185524226:ok]' value='n#,##0.000;-#,##0.000' />
            <format attr='text-format' field='[federated.14wji1409aimch1a8movs18j3nlh].[none:Health (Life Expectancy) (copy)_609182264186388483:ok]' value='n#,##0.000;-#,##0.000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.14wji1409aimch1a8movs18j3nlh].[none:Happiness Rank:nk] / ([federated.14wji1409aimch1a8movs18j3nlh].[none:Country:nk] / ([federated.14wji1409aimch1a8movs18j3nlh].[none:Region:nk] / ([federated.14wji1409aimch1a8movs18j3nlh].[none:Happiness Score:nk] / ([federated.14wji1409aimch1a8movs18j3nlh].[none:Economy (GDP per Capita):ok] / ([federated.14wji1409aimch1a8movs18j3nlh].[none:Freedom (copy)_609182264185524226:ok] / [federated.14wji1409aimch1a8movs18j3nlh].[none:Health (Life Expectancy) (copy)_609182264186388483:ok]))))))</rows>
        <cols />
      </table>
      <simple-id uuid='{2638BE30-5C1D-4C72-83A0-23881C8B0CFB}' />
    </worksheet>
    <worksheet name='Trust'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; - </run>
            <run fontsize='9'>Bahrain Excluded</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Book2)' name='federated.14wji1409aimch1a8movs18j3nlh' />
          </datasources>
          <datasource-dependencies datasource='federated.14wji1409aimch1a8movs18j3nlh'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
                <semantic-value key='&quot;Somaliland region&quot;' value='&quot;Somalia&quot;' />
              </semantic-values>
            </column>
            <column aggregation='CountD' caption='Happiness Score_' datatype='real' datatype-customized='true' name='[Happiness Score (copy)_609182264184573953]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([Happiness Score])' />
            </column>
            <column aggregation='CountD' datatype='string' name='[Happiness Score]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column caption='Trust (Government Corruption)_' datatype='real' datatype-customized='true' name='[Trust (Government Corruption) (copy)_609182264186585092]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([Trust (Government Corruption)])' />
            </column>
            <column datatype='string' name='[Trust (Government Corruption)]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Happiness Score (copy)_609182264184573953]' derivation='None' name='[none:Happiness Score (copy)_609182264184573953:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Trust (Government Corruption) (copy)_609182264186585092]' derivation='None' name='[none:Trust (Government Corruption) (copy)_609182264186585092:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14wji1409aimch1a8movs18j3nlh].[Exclusions (Country,Happiness Score (copy),Trust (Government Corruption) (copy))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Country:nk]' />
                <groupfilter function='level-members' level='[none:Happiness Score (copy)_609182264184573953:qk]' />
                <groupfilter function='level-members' level='[none:Trust (Government Corruption) (copy)_609182264186585092:qk]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Armenia&quot;' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Happiness Score (copy)_609182264184573953:qk]' member='4.3499999999999996' />
                    <groupfilter function='member' level='[none:Trust (Government Corruption) (copy)_609182264186585092:qk]' member='39.0' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahrain&quot;' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Happiness Score (copy)_609182264184573953:qk]' member='5.96' />
                    <groupfilter function='member' level='[none:Trust (Government Corruption) (copy)_609182264186585092:qk]' member='306.0' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bolivia&quot;' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Happiness Score (copy)_609182264184573953:qk]' member='5.8899999999999997' />
                    <groupfilter function='member' level='[none:Trust (Government Corruption) (copy)_609182264186585092:qk]' member='88.0' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Comoros&quot;' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Happiness Score (copy)_609182264184573953:qk]' member='3.956' />
                    <groupfilter function='member' level='[none:Trust (Government Corruption) (copy)_609182264186585092:qk]' member='199.0' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.14wji1409aimch1a8movs18j3nlh].[none:Country:nk]' filter-group='4'>
            <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country:nk]' to='&quot;Zambia&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.14wji1409aimch1a8movs18j3nlh].[none:Region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.14wji1409aimch1a8movs18j3nlh].[none:Region:nk]</column>
            <column>[federated.14wji1409aimch1a8movs18j3nlh].[Exclusions (Country,Happiness Score (copy),Trust (Government Corruption) (copy))]</column>
            <column>[federated.14wji1409aimch1a8movs18j3nlh].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.14wji1409aimch1a8movs18j3nlh].[none:Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14wji1409aimch1a8movs18j3nlh].[none:Happiness Score (copy)_609182264184573953:qk]</rows>
        <cols>[federated.14wji1409aimch1a8movs18j3nlh].[none:Trust (Government Corruption) (copy)_609182264186585092:qk]</cols>
      </table>
      <simple-id uuid='{B096A0CB-0392-49E9-BDB6-4726C8FE0F5E}' />
    </worksheet>
    <worksheet name='WesternEurope'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Sheet Name> - Economy (GDP per Capita)
]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Book2)' name='federated.14wji1409aimch1a8movs18j3nlh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.14wji1409aimch1a8movs18j3nlh'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
                <semantic-value key='&quot;Somaliland region&quot;' value='&quot;Somalia&quot;' />
              </semantic-values>
            </column>
            <column caption='Economy (GDP per Capita) (copy)' datatype='real' name='[Economy (GDP per Capita) (copy)_609182264173957120]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[Economy (GDP per Capita)]' />
            </column>
            <column datatype='real' name='[Economy (GDP per Capita)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Economy (GDP per Capita) (copy)_609182264173957120]' derivation='Sum' name='[sum:Economy (GDP per Capita) (copy)_609182264173957120:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14wji1409aimch1a8movs18j3nlh].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cyprus&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;North Cyprus&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.14wji1409aimch1a8movs18j3nlh].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;Western Europe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.14wji1409aimch1a8movs18j3nlh].[none:Region:nk]</column>
            <column>[federated.14wji1409aimch1a8movs18j3nlh].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.14wji1409aimch1a8movs18j3nlh].[Longitude (generated)]' field-type='quantitative' max='4888319.1557300473' min='-2569389.8036700021' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.14wji1409aimch1a8movs18j3nlh].[Latitude (generated)]' field-type='quantitative' max='12213779.659039438' min='2869024.8046626798' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.14wji1409aimch1a8movs18j3nlh].[sum:Economy (GDP per Capita) (copy)_609182264173957120:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff0000</color>
                <color>#fb1616</color>
                <color>#f82d2d</color>
                <color>#f44242</color>
                <color>#f15757</color>
                <color>#ed6c6c</color>
                <color>#ea7f7f</color>
                <color>#e69292</color>
                <color>#e3a5a5</color>
                <color>#dfb7b7</color>
                <color>#dcc8c8</color>
                <color>#d9d9d9</color>
                <color>#bdbdd0</color>
                <color>#a4a4c8</color>
                <color>#8c8cc0</color>
                <color>#7575b8</color>
                <color>#6060b0</color>
                <color>#4c4ca8</color>
                <color>#3a3aa0</color>
                <color>#292998</color>
                <color>#1a1a90</color>
                <color>#0c0c88</color>
                <color>#000080</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.14wji1409aimch1a8movs18j3nlh].[sum:Economy (GDP per Capita) (copy)_609182264173957120:qk]' value='Economy (GDP per Capita)&#10;'>
              <formatted-text>
                <run>Economy (GDP per Capita)&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.14wji1409aimch1a8movs18j3nlh].[sum:Economy (GDP per Capita) (copy)_609182264173957120:qk]' />
              <lod column='[federated.14wji1409aimch1a8movs18j3nlh].[none:Country:nk]' />
              <geometry column='[federated.14wji1409aimch1a8movs18j3nlh].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14wji1409aimch1a8movs18j3nlh].[Latitude (generated)]</rows>
        <cols>[federated.14wji1409aimch1a8movs18j3nlh].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D4CBCB1E-FBF4-44C9-A4EB-1D73574EB053}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='World Happiness 2015'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#faf5f0' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='font-size' value='36' />
          <format attr='border-style' value='solid' />
          <format attr='text-align' value='center' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='text-align' value='left' />
        </style-rule>
      </style>
      <size maxheight='1800' maxwidth='1600' minheight='1800' minwidth='1600' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Sheet1 (Book2)' name='federated.14wji1409aimch1a8movs18j3nlh' />
      </datasources>
      <datasource-dependencies datasource='federated.14wji1409aimch1a8movs18j3nlh'>
        <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
          <semantic-values semantic-role='[Country].[Name]'>
            <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
            <semantic-value key='&quot;Somaliland region&quot;' value='&quot;Somalia&quot;' />
          </semantic-values>
        </column>
        <column datatype='string' name='[Happiness Rank]' role='dimension' type='nominal' />
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
        <column-instance column='[Happiness Rank]' derivation='None' name='[none:Happiness Rank:nk]' pivot='key' type='nominal' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='99112' id='30' param='vert' type-v2='layout-flow' w='99000' x='500' y='444'>
            <zone fixed-size='127' h='7500' id='31' is-fixed='true' type-v2='title' w='99000' x='500' y='444'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='91612' id='22' param='horz' type-v2='layout-flow' w='99000' x='500' y='7944'>
              <zone h='91612' id='13' param='horz' type-v2='layout-flow' w='99000' x='500' y='7944'>
                <zone h='91612' id='11' type-v2='layout-basic' w='99000' x='500' y='7944'>
                  <zone h='5389' id='6' type-v2='empty' w='2587' x='60270' y='94167'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='39889' id='10' name='Luxemburg/Qatar Excluded' w='62356' x='500' y='54278'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='39889' id='17' name='WesternEurope' w='36644' x='62856' y='54278'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='20500' id='14' name='Luxemburg/Qatar Excluded' param='[federated.14wji1409aimch1a8movs18j3nlh].[none:Region:nk]' show-apply='true' type-v2='filter' w='19625' x='500' y='7944'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='5389' id='23' name='Luxemburg/Qatar Excluded' pane-specification-id='0' param='[federated.14wji1409aimch1a8movs18j3nlh].[attr:Economy (GDP per Capita) (copy)_609182264173957120:qk]' type-v2='color' w='18632' x='13014' y='94167'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='5389' id='28' name='WesternEurope' pane-specification-id='0' param='[federated.14wji1409aimch1a8movs18j3nlh].[sum:Economy (GDP per Capita) (copy)_609182264173957120:qk]' type-v2='color' w='18322' x='81178' y='94167'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='550' h='5389' id='32' is-fixed='true' mode='slider' name='Luxemburg/Qatar Excluded' param='[federated.14wji1409aimch1a8movs18j3nlh].[none:Happiness Rank:nk]' type-v2='filter' values='database' w='14313' x='45957' y='94167'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='20500' id='36' name='Sheet 10' w='60178' x='39322' y='7944'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='20945' id='37' name='Freedom' w='25964' x='24763' y='33333'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='20945' id='38' name='Health' w='25639' x='50727' y='33333'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='20945' id='39' name='Trust' w='23134' x='76366' y='33333'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='20945' id='40' name='Economy' w='24263' x='500' y='33333'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='4889' id='41' type-v2='text' w='99000' x='500' y='28444'>
                    <formatted-text>
                      <run>The scatter plots and trend lines below can be simply evaluated according to their p values and coefficient values.
If the p value is smalles than the 0.05 (conventional threshold), it can be said that the model is statistically significant.
The steeper the line (either negative or positive tendency) means greater correlation between the values (x and y axes)</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='20500' id='42' name='Luxemburg/Qatar Excluded' param='[federated.14wji1409aimch1a8movs18j3nlh].[none:Country:nk]' type-v2='filter' values='relevant' w='19197' x='20125' y='7944'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone forceUpdate='true' h='5389' id='43' type-v2='text' w='18321' x='62857' y='94167'>
                    <formatted-text>
                      <run>Luxemburg is excluded as it is outlier with gdp per capita more than 1.56, making all countries red except Norway and Switzerland
</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone forceUpdate='true' h='5389' id='44' type-v2='text' w='12514' x='500' y='94167'>
                    <formatted-text>
                      <run>Luxemburg and Qatar are excluded as they are outliers with gdp per capita more than 1.50, making most of the countries red.
</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='5389' id='45' type-v2='text' w='14311' x='31646' y='94167'>
                    <formatted-text>
                      <run>You can use the happiness rank slider to see the ith happiest country on the map and corresponding economy metric</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2700' minheight='2700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='54' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='99112' id='53' param='vert' type-v2='layout-flow' w='99000' x='500' y='444'>
                <zone fixed-size='127' h='7500' id='31' type-v2='title' w='99000' x='500' y='444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='20500' id='36' is-fixed='true' name='Sheet 10' w='60178' x='39322' y='7944'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4889' id='41' type-v2='text' w='99000' x='500' y='28444'>
                  <formatted-text>
                    <run>The scatter plots and trend lines below can be simply evaluated according to their p values and coefficient values.
If the p value is smalles than the 0.05 (conventional threshold), it can be said that the model is statistically significant.
The steeper the line (either negative or positive tendency) means greater correlation between the values (x and y axes)</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='20945' id='40' is-fixed='true' name='Economy' w='24263' x='500' y='33333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='20945' id='37' is-fixed='true' name='Freedom' w='25964' x='24763' y='33333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='20945' id='38' is-fixed='true' name='Health' w='25639' x='50727' y='33333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='20945' id='39' is-fixed='true' name='Trust' w='23134' x='76366' y='33333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='20500' id='14' mode='checkdropdown' name='Luxemburg/Qatar Excluded' param='[federated.14wji1409aimch1a8movs18j3nlh].[none:Region:nk]' show-apply='true' type-v2='filter' w='19625' x='500' y='7944'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='550' h='5389' id='32' mode='slider' name='Luxemburg/Qatar Excluded' param='[federated.14wji1409aimch1a8movs18j3nlh].[none:Happiness Rank:nk]' type-v2='filter' values='database' w='14313' x='45957' y='94167'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='20500' id='42' mode='checkdropdown' name='Luxemburg/Qatar Excluded' param='[federated.14wji1409aimch1a8movs18j3nlh].[none:Country:nk]' type-v2='filter' values='relevant' w='19197' x='20125' y='7944'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39889' id='10' is-fixed='true' name='Luxemburg/Qatar Excluded' w='62356' x='500' y='54278'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5389' id='23' name='Luxemburg/Qatar Excluded' pane-specification-id='0' param='[federated.14wji1409aimch1a8movs18j3nlh].[attr:Economy (GDP per Capita) (copy)_609182264173957120:qk]' type-v2='color' w='18632' x='13014' y='94167'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39889' id='17' is-fixed='true' name='WesternEurope' w='36644' x='62856' y='54278'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5389' id='28' name='WesternEurope' pane-specification-id='0' param='[federated.14wji1409aimch1a8movs18j3nlh].[sum:Economy (GDP per Capita) (copy)_609182264173957120:qk]' type-v2='color' w='18322' x='81178' y='94167'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='5389' id='44' type-v2='text' w='12514' x='500' y='94167'>
                  <formatted-text>
                    <run>Luxemburg and Qatar are excluded as they are outliers with gdp per capita more than 1.50, making most of the countries red.
</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5389' id='45' type-v2='text' w='14311' x='31646' y='94167'>
                  <formatted-text>
                    <run>You can use the happiness rank slider to see the ith happiest country on the map and corresponding economy metric</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='5389' id='43' type-v2='text' w='18321' x='62857' y='94167'>
                  <formatted-text>
                    <run>Luxemburg is excluded as it is outlier with gdp per capita more than 1.56, making all countries red except Norway and Switzerland
</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{66419F4E-6923-49CE-8474-EA90618909DA}' />
    </dashboard>
  </dashboards>
  <windows show-side-pane='false' source-height='30'>
    <window class='dashboard' maximized='true' name='World Happiness 2015'>
      <viewpoints>
        <viewpoint name='Economy'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Freedom'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Health'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Luxemburg/Qatar Excluded'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.14wji1409aimch1a8movs18j3nlh].[attr:Economy (GDP per Capita) (copy)_609182264173957120:qk]</field>
            </color-one-way>
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 10'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Trust'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='WesternEurope'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{C023833A-66D2-4084-86BD-1194022D0FE2}' />
    </window>
    <window class='worksheet' hidden='true' name='Economy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[none:Country:nk]</field>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[none:Freedom (copy)_609182264185524226:qk]</field>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[none:Happiness Rank:nk]</field>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[none:Happiness Score:nk]</field>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DFCC15CA-47FE-4737-867D-D9AB76377267}' />
    </window>
    <window class='worksheet' hidden='true' name='Freedom'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[none:Country:nk]</field>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[none:Freedom (copy)_609182264185524226:qk]</field>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[none:Happiness Rank:nk]</field>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[none:Happiness Score:nk]</field>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{924B31DE-BB12-4A51-AB72-E6808BE27CDD}' />
    </window>
    <window class='worksheet' hidden='true' name='Health'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[none:Country:nk]</field>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[none:Freedom (copy)_609182264185524226:qk]</field>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[none:Happiness Rank:nk]</field>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[none:Happiness Score:nk]</field>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B4E0D9E3-2755-4830-8DB7-1DFD7FD8C4A4}' />
    </window>
    <window class='worksheet' hidden='true' name='Luxemburg/Qatar Excluded'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.14wji1409aimch1a8movs18j3nlh].[none:Happiness Rank:nk]' type='filter' />
            <card param='[federated.14wji1409aimch1a8movs18j3nlh].[none:Happiness Score (copy)_609182264184573953:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.14wji1409aimch1a8movs18j3nlh].[none:Region:nk]' show-apply='true' type='filter' />
            <card pane-specification-id='0' param='[federated.14wji1409aimch1a8movs18j3nlh].[attr:Economy (GDP per Capita) (copy)_609182264173957120:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[attr:Economy (GDP per Capita) (copy)_609182264173957120:qk]</field>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[none:Country:nk]</field>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[none:Economy (GDP per Capita):nk]</field>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[none:Happiness Score (copy)_609182264184573953:qk]</field>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C8B19D37-4188-4174-B7A7-3855A9EC4EE0}' />
    </window>
    <window class='worksheet' hidden='true' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[none:Country:nk]</field>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[none:Happiness Rank:nk]</field>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[none:Happiness Score:nk]</field>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{600BBE6D-3908-4FAB-AAB6-A275CD05F341}' />
    </window>
    <window class='worksheet' hidden='true' name='Trust'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[none:Country:nk]</field>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[none:Freedom (copy)_609182264185524226:qk]</field>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[none:Happiness Rank:nk]</field>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[none:Happiness Score:nk]</field>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{656592AD-5776-4B28-B12D-4B6787A41A79}' />
    </window>
    <window class='worksheet' hidden='true' name='WesternEurope'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14wji1409aimch1a8movs18j3nlh].[sum:Economy (GDP per Capita) (copy)_609182264173957120:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[none:Country:nk]</field>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[none:Economy (GDP per Capita) (copy)_609182264173957120:ok]</field>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[none:Economy (GDP per Capita):nk]</field>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[none:Region:nk]</field>
            <field>[federated.14wji1409aimch1a8movs18j3nlh].[sum:Economy (GDP per Capita) (copy)_609182264173957120:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{3779D445-C050-443C-A241-9A6CB75FE98A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='World Happiness 2015' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
